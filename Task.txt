âœ… Prompt for AI Agent: Extend Existing Next.js App with Admin Dashboard Using Prisma

ðŸ“˜ Project Context

- Framework: Next.js with TypeScript
- Database: Prisma (with schema already defined)
- Data access: via prisma_client
- Objective: Build an integrated admin dashboard to manage Prisma models
- Admin auth: Use simple login form with fixed credentials (admin/admin)
- Folder structure: Extend the current project, do not create a new app

ðŸŽ¯ Tasks

1. ðŸ›  Add Route /admin to Existing App

   - Create a new route `/admin` in the existing Next.js project
   - This route will serve as the entry point to the admin dashboard

2. ðŸ”’ Setup Login Authentication

   - Add a login page at `/admin/login`
   - Simple login form:
     - Username: `admin`
     - Password: `admin`
   - On successful login:
     - Store a session (use cookies or localStorage)
     - Redirect to `/admin`
   - Protect all `/admin/*` routes so that unauthenticated users are redirected to `/admin/login`

3. ðŸ§­ Build Admin Interface at `/admin`

   - Display a sidebar or menu that lists all Prisma models (e.g., User, Post)
   - Each model name should be a clickable link to `/admin/[model-name]`

4. ðŸ“‹ CRUD UI for Each Model

   - For each model:
     - Table view to display entries
     - Button/modal/form to Create, Edit, Delete entries
   - Use Prisma client to interact with the database through internal API routes

5. ðŸ”Œ API Routes for Data Manipulation

   - Create internal API routes in `/pages/api/admin/[model]/[action].ts` or use App Router if applicable
     - `GET` - list entries
     - `POST` - create entry
     - `PUT` - update entry
     - `DELETE` - delete entry

6. ðŸŽ¨ UI/UX

   - Use a UI library like TailwindCSS or Bootstrap to ensure clean and simple design
   - Show error/success messages after actions (e.g., toast or alert)
   - Use modals for forms when possible

ðŸ“¦ Deliverables

- `/admin` route added to existing Next.js app
- Login page with `admin/admin` check
- Protected admin interface with model menu and CRUD pages
- API endpoints for data management using Prisma
- Clean and functional UI for manipulating database entries

âœ… Optional Enhancements

- Pagination and search filters in table views
- Validation on form inputs
- Role-based access control in the future